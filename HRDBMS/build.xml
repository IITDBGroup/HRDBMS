
<project name="HRDBMS" default="createJar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- PROPERTIES -->
	<property name="projectroot" value="${basedir}" />

	<!-- DIRECTORIES -->
	<property name="sourcedir" value="${projectroot}/src" />
	<property name="binarydir" value="${projectroot}/bin" />
	<property name="builddir" value="${projectroot}/build" />
	<property name="librarydir" value="${projectroot}/lib" />
	<property name="buildlibrarydir" value="${projectroot}/buildlib" />
	<property name="tmpjardir" value="${projectroot}/tmpjardir" />
	<property name="parseroutdir" value="${sourcedir}/com/exascale/optimizer/" />

	<!-- FILES -->
	<property name="buildjar" value="${builddir}/gprom-jdbc-test.jar" />
	<property name="packagejar" value="${builddir}/HRDBMS.jar" />
	<property name="grammarfile" value="${sourcedir}/com/exascale/optimizer/Select.g4" /> 

	<!-- Ivy -->
    <property name="ivy.install.version" value="2.1.0" />
    <condition property="ivy.home" value="${env.IVY_HOME}">
      <isset property="env.IVY_HOME" />
    </condition>
    <property name="ivy.jar.dir" value="${librarydir}" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
		
	
	<!-- CLASSPATHS -->
<!--	<path id="libraries">
		<fileset dir="${binarydir}">
			<include name="**/*.class"/>
		</fileset>
	</path>
	-->
	<!-- **************************************** TASKS **************************************** -->                                         
	<!-- Ivy -->
    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>
	
	<target name="download-dependencies" depends="init-ivy">
		 <ivy:configure file="ivysettings.xml" override="true" />
		 <ivy:resolve />
		 <ivy:retrieve sync="false" type="jar,bundle" pattern="${librarydir}/[organisation].[module].[artifact]-[revision](-[classifier]).[ext]" />
		<!-- classpath -->
		<path id="classpath">
			<fileset dir="${librarydir}"/>
		</path>
	</target>
	
	<!-- TASK DEFS AND IMPORTED LIBRARIES -->
	<target name="setup-additional-anttasks" depends="download-dependencies">
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${basedir}/lib/ant-contrib.jar"/>
			</classpath>
		</taskdef>
	</target>
	
	<!-- CLEAN -->
	<target name="clean" depends="setup-additional-anttasks">
		<mkdir dir="${builddir}" />
		<mkdir dir="${binarydir}" />
		<mkdir dir="${tmpjardir}" />
	</target>

	
	<!-- EXTRACT CLASS FILES FOR DEPENDENCIES
	<target name="unjarDependencies" depends="clean">
	    <unzip dest="${binarydir}">
	        <fileset dir="${librarydir}">
	            <include name="**/*.jar" />
	        </fileset>    
	    </unzip>
	</target>  -->

	<!-- CREATE PARSER -->
	<target name="createParser" depends="clean">
		<java classname="org.antlr.v4.Tool" classpathref="classpath">
			<arg value="-visitor"/>
			<arg value="-package"/>
			<arg value="com.exascale.optimizer" />
			<arg value="-o"/>
			<arg value="${projectroot}/src/com/exascale/optimizer" />
			<arg value="${grammarfile}"/>
		</java> 
	</target>
	
	<!-- COMPILE SYSTEM -->
	<target name="compile" depends="createParser">
		<depend srcdir="${sourcedir}"
		        destdir="${binarydir}"
		        cache="depcache"
		        closure="yes"/>
		<javac
			srcdir="${sourcedir}" 
			destdir="${binarydir}" 
			classpathref="classpath" 
			debug="on" 
			excludes="**/.svn*" 
			source="1.8"
			includeantruntime="false">
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xmaxwarns"/>
			<compilerarg value="0"/>
		</javac>
	</target>

	<target name="compileStandalone">
		<path id="classpath">
			<fileset dir="${librarydir}"/>
		</path>
		<depend srcdir="${sourcedir}"
		        destdir="${binarydir}"
		        cache="depcache"
		        closure="yes"/>
		<javac 
			srcdir="${sourcedir}" 
			destdir="${binarydir}" 
			classpathref="classpath" 
			debug="on" 
			excludes="**/.svn*" 
			source="1.8"
			includeantruntime="false">
			<compilerarg value="-Xlint:unchecked -Xmaxwarns" />
		</javac>
	</target>
	
	<!-- PACKAGE SYSTEM AS JAR -->
	<target name="createJar" depends="compile">
		<path id="jarclasspath">
			<fileset dir="${librarydir}">
				<exclude name="ant*.jar" />
				<exclude name="ivy.jar" />
			</fileset>
			<fileset dir="${librarydir}" includes="antlr*.jar" />
		</path>
		<delete dir="${tmpjardir}"/> 
		<unjar dest="${tmpjardir}">
			<patternset>
				<exclude name="**/*.RSA"/>
				<exclude name="**/*.SF"/>
				<exclude name="**/*.DSA"/>
			</patternset>
			<path refid="jarclasspath" />
		</unjar>
		<jar destfile="${packagejar}" basedir="${binarydir}" zip64Mode="as-needed">
			<manifest>
				<attribute name="Created-By" value="Illinois Institute of Technology, Department for Computer Science" />
			</manifest>
			<zipfileset dir="${tmpjardir}" includes="**/*" /> 
		</jar>
		<delete dir="${tmpjardir}"/>
	</target>

	<target name="createJarStandalone">
		<path id="jarclasspath">
			<fileset dir="${librarydir}" excludes="ant*.jar ivy.jar" />
			<fileset dir="${librarydir}" includes="antlr*.jar" />
		</path>
		<delete dir="${tmpjardir}"/> 
		<unjar dest="${tmpjardir}">
			<patternset>
				<exclude name="**/*.RSA"/>
				<exclude name="**/*.SF"/>
				<exclude name="**/*.DSA"/>
			</patternset>
			<path refid="jarclasspath" />
		</unjar>
		<jar destfile="${packagejar}" basedir="${binarydir}" zip64Mode="as-needed">
			<manifest>
				<attribute name="Created-By" value="Illinois Institute of Technology, Department for Computer Science" />
			</manifest>
			<zipfileset dir="${tmpjardir}" includes="**/*" /> 
		</jar>
		<delete dir="${tmpjardir}"/>
	</target>
</project>
